#### crowsnest.conf
#### This is a typical default config.
#### Also used as default in mainsail / MainsailOS
#### See:
#### https://github.com/mainsail-crew/crowsnest/blob/master/README.md
#### for details to configure to your needs.


#####################################################################
####                                                            #####
####      Information about ports and according URL's           #####
####                                                            #####
#####################################################################
####                                                            #####
####    Port 8080 equals /webcam/?action=[stream/snapshot]      #####
####    Port 8081 equals /webcam2/?action=[stream/snapshot]     #####
####    Port 8082 equals /webcam3/?action=[stream/snapshot]     #####
####    Port 8083 equals /webcam4/?action=[stream/snapshot]     #####
####                                                            #####
#####################################################################
####    RTSP Stream URL: ( if enabled and supported )           #####
####    rtsp://<ip>:<rtsp_port>/stream.h264                     #####
#####################################################################


[crowsnest]
log_path: /home/pi/printer_data/logs/crowsnest.log
log_level: verbose                      # Valid Options are quiet/verbose/debug
delete_log: false                       # Deletes log on every restart, if set to true
no_proxy: false

[cam 1]
mode: camera-streamer                         # ustreamer - Provides mjpg and snapshots. (All devices)
                                        # camera-streamer - Provides webrtc, mjpg and snapshots. (rpi + Raspi OS based only)
enable_rtsp: true                      # If camera-streamer is used, this enables also usage of an rtsp server
rtsp_port: 8554                         # Set different ports for each device!
port: 8080                              # HTTP/MJPG Stream/Snapshot Port
#device: /dev/video0                     # See Log for available ...
device: /dev/v4l/by-id/usb-Mintion_NZC_Mintion_NZC_SN0001-video-index0
resolution: 1280x720                     # widthxheight format
#resolution: 1920x1080                     # widthxheight format
max_fps: 5                             # If Hardware Supports this it will be forced, otherwise ignored/coerced.
#custom_flags:                          # You can run the Stream Services with custom flags.
v4l2ctl:  auto_exposure=1                             # Add v4l2-ctl parameters to setup your camera, see Log what your cam is capable of.
                                        # auto_exposure 0x009a0901 (menu)   : min=0 max=3 default=1 value=1         1: Manual Mode		3: Aperture Priority Mode
                                        # exposure_time_absolute 0x009a0902 (int)    : min=1 max=5000 step=1 default=312 value=312
                                        # exposure_dynamic_framerate 0x009a0903 (bool)   : default=0 value=1
                                        # focus_absolute 0x009a090a (int)    : min=1 max=1023 step=1 default=641 value=641
                                        # focus_automatic_continuous 0x009a090c (bool)   : default=0 value=0

[cam 2]
mode: camera-streamer                         # ustreamer - Provides mjpg and snapshots. (All devices)
                                        # camera-streamer - Provides webrtc, mjpg and snapshots. (rpi + Raspi OS based only)
enable_rtsp: true                      # If camera-streamer is used, this enables also usage of an rtsp server
rtsp_port: 8555                         # Set different ports for each device!
port: 8081                              # HTTP/MJPG Stream/Snapshot Port
#device: /dev/video0                     # See Log for available ...
device: /dev/v4l/by-id/usb-AX-5693-220204-ZW_APDQM-0623-W_01.00.00-video-index0
resolution: 1280x720                     # widthxheight format
#resolution: 1920x1080                     # widthxheight format
max_fps: 5                             # If Hardware Supports this it will be forced, otherwise ignored/coerced.